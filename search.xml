<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于Hexo自建一个github托管的静态网页</title>
      <link href="/2023/08/25/hexo-zi-jian-wang-zhan/"/>
      <url>/2023/08/25/hexo-zi-jian-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Hexo自建一个github托管的静态网页"><a href="#基于Hexo自建一个github托管的静态网页" class="headerlink" title="基于Hexo自建一个github托管的静态网页"></a>基于Hexo自建一个github托管的静态网页</h1><h2 id="建立github密钥"><a href="#建立github密钥" class="headerlink" title="建立github密钥"></a>建立github密钥</h2><pre class="line-numbers language-none"><code class="language-none">git config --global user.name wolfvoidgit config --global user.email 1055320990@qq.com三个回车，根据提示内容找到密钥储存地址，复制密钥在github上的ssh部分添加ssh git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>经历如下过程，出现如下结果</p><pre class="line-numbers language-none"><code class="language-none">y@LAPTOP-S8GDLRKI MINGW64 ~&#x2F;Desktop$ ssh git@github.comThe authenticity of host &#39;github.com (20.205.243.166)&#39; can&#39;t be established.ED25519 key fingerprint is 密码.This key is not known by any other names.Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yesWarning: Permanently added &#39;github.com&#39; (ED25519) to the list of known hosts.PTY allocation request failed on channel 0Hi wolfvoid! You&#39;ve successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed.y@LAPTOP-S8GDLRKI MINGW64 ~&#x2F;Desktop$ ssh git@github.comPTY allocation request failed on channel 0Hi wolfvoid! You&#39;ve successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二次表示匹配成功</p><h2 id="确保node和npm已安装"><a href="#确保node和npm已安装" class="headerlink" title="确保node和npm已安装"></a>确保node和npm已安装</h2><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>命令行如下</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli hexo init My_blogcd My_bloghexo new test_my_sitehexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来在本地localhost:4000可见初始网页</p><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><pre class="line-numbers language-none"><code class="language-none">npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客命令简写hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章hexo g &#x3D;&#x3D; hexo generate #生成hexo s &#x3D;&#x3D; hexo server #启动服务预览hexo d &#x3D;&#x3D; hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h2><p>blog根目录里的_config.yml文件称为站点配置文件</p><p>themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件</p><p>打开站点的配置文件_config.yml，翻到最后修改为：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: https:&#x2F;&#x2F;github.com&#x2F;wolfvoid&#x2F;wolfvoid.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里应该是有问题的，后面会修改</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --savehexo clean hexo g hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>报错如下</p><pre class="line-numbers language-none"><code class="language-none">(base) PS E:\My_blog\My_blog&gt; npm install hexo-deployer-git --savenpm ERR! Cannot read properties of null (reading &#39;matches&#39;)npm ERR! A complete log of this run can be found in:npm ERR! C:\Users\y\AppData\Local\npm-cache\_logs\2023-08-24T17_51_02_435Z-debug-0.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原因：我的node版本太高了，反正就是不符合要求</p><p>补救方法：安装适合版本的node。为了方便管理，直接安装nvm</p><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><p><a href="https://www.rstk.cn/news/1475977.html?action=onClick">https://www.rstk.cn/news/1475977.html?action=onClick</a></p><p>注意在E:\nvm\nvm\settings.txt中替换镜像源为</p><pre class="line-numbers language-none"><code class="language-none">node_mirror:https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node&#x2F;npm_mirror:https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;npm&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意路径为</p><p><img src="C:\Users\y\AppData\Roaming\Typora\typora-user-images\image-20230825151837550.png" alt="image-20230825151837550"></p><p>出现安装nvm后node和npm无法正常显示的问题</p><p><a href="https://blog.csdn.net/taylorzun/article/details/105471841">https://blog.csdn.net/taylorzun/article/details/105471841</a></p><h2 id="★基本搭建结束符★"><a href="#★基本搭建结束符★" class="headerlink" title="★基本搭建结束符★"></a>★基本搭建结束符★</h2><p>至此网站基本的工作完成了，主题为landscape，太low了，我想要更换主题</p><h2 id="闪烁之狐主题"><a href="#闪烁之狐主题" class="headerlink" title="闪烁之狐主题"></a>闪烁之狐主题</h2><p>hexo-theme-matery的示例网站：<a href="http://blinkfox.com/">http://blinkfox.com/</a></p><p>介绍网站<a href="https://zhuanlan.zhihu.com/p/35668237">https://zhuanlan.zhihu.com/p/35668237</a></p><p>★详见“闪烁之狐”主题的README</p><p>根据该README文件完成了新建所有页的操作</p><p>并完成了插件构建 </p><h2 id="解决更换主题后无法显示的问题"><a href="#解决更换主题后无法显示的问题" class="headerlink" title="解决更换主题后无法显示的问题"></a>解决更换主题后无法显示的问题</h2><p>hexo更换主题后出现问题：WARN No layout: index.html</p><p><a href="https://blog.csdn.net/weixin_44460555/article/details/111866191">https://blog.csdn.net/weixin_44460555/article/details/111866191</a></p><p>主要来说就是下载的包名字是hexo-theme-matery-master，而设置里面是用的hexo-theme-matery，它找不到了。把它对应起来就好了。</p><h2 id="解决无法连接github的问题"><a href="#解决无法连接github的问题" class="headerlink" title="解决无法连接github的问题"></a>解决无法连接github的问题</h2><p>解决无法连接github的 Connection was reset问题</p><pre class="line-numbers language-none"><code class="language-none">fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;wolfvoid&#x2F;wolfvoid.github.io.git&#x2F;&#39;: Recv failure: Connection was resetFATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.htmlError: Spawn failed    at ChildProcess.&lt;anonymous&gt; (E:\My_blog\blog\node_modules\hexo-util\lib\spawn.js:51:21)    at ChildProcess.emit (node:events:390:28)    at ChildProcess.cp.emit (E:\My_blog\blog\node_modules\cross-spawn\lib\enoent.js:34:29)    at Process.ChildProcess._handle.onexit (node:internal&#x2F;child_process:290:12)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解决方法：</p><p>_config.yml文件修改为</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: git@github.com:wolfvoid&#x2F;wolfvoid.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="如何向github仓库上传文件"><a href="#如何向github仓库上传文件" class="headerlink" title="如何向github仓库上传文件"></a>如何向github仓库上传文件</h2><p>（使用github作为图床）</p><pre class="line-numbers language-none"><code class="language-none">git init #把这个文件夹变成gitgit status #查看文件夹里的文件的情况git add xxxx #添加东西git commit -m &#39;我提交了xxx&#39; #注释建立github密钥联系建立GitHub上的仓库git remote add origin git@github.com:wolfvoid&#x2F;pictures.git#若初次上传git push -u origin master若已经有过东西git pull --rebase origin mastergit push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用上述方法出错如下</p><pre class="line-numbers language-none"><code class="language-none">$ git push origin mastererror: src refspec master does not match anyerror: failed to push some refs to &#39;github.com:wolfvoid&#x2F;pictures.git&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>错误原因是git上的master和github上的main不符合（有病吧）</p><p><a href="https://blog.csdn.net/gongdamrgao/article/details/115032436?spm=1001.2014.3001.5502">https://blog.csdn.net/gongdamrgao/article/details/115032436?spm=1001.2014.3001.5502</a></p><p>操作流程：</p><pre class="line-numbers language-none"><code class="language-none">git clone git@github.com:wolfvoid&#x2F;pictures.git #先把远程仓库扒下来git add xxxx #添加东西git commit -m &#39;我提交了xxx&#39; #注释git push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样应该就没问题了</p>]]></content>
      
      
      <categories>
          
          <category> webpage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenMP并行编程</title>
      <link href="/2023/08/25/openmp-bing-xing-bian-cheng/"/>
      <url>/2023/08/25/openmp-bing-xing-bian-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenMP并行编程"><a href="#OpenMP并行编程" class="headerlink" title="OpenMP并行编程"></a>OpenMP并行编程</h1><p>在codeblocks上配置OpenMP</p><p>本质：</p><p>编译时添加 -fopenmp命令</p><p>链接时添加 -lgomp -lpthread</p><p>【vscode本机】</p><p>使用终端编译</p><p> g++ -fopenmp -lgomp -lpthread parallel.cpp</p><p>使用以下命令编译即可直接得到结果</p><pre class="line-numbers language-none"><code class="language-none">g++ -fopenmp -lgomp -lpthread parallel.cpp -o process.exe ; .\process.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><pre class="line-numbers language-none"><code class="language-none">#include&lt;omp.h&gt;#include&lt;iostream&gt;using namespace std;int main()&#123;#pragma omp parallel&#123;cout &lt;&lt; &quot;Hello, world!&quot; &lt;&lt; endl;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置并行线程个数</p><pre class="line-numbers language-none"><code class="language-none">#pragma omp parallel num_threads(5)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-none"><code class="language-none">omp_set_num_threads(2);#pragma omp parallel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>循环</p><pre class="line-numbers language-none"><code class="language-none">#include&lt;omp.h&gt;#include&lt;iostream&gt;using namespace std;int main()&#123;omp_set_num_threads(2);#pragma omp parallel&#123;#pragma omp forfor(int i&#x3D;0;i&lt;4;i++) cout &lt;&lt; omp_get_thread_num() &lt;&lt; endl;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用schedule子句进行for循环任务调度的管理"><a href="#用schedule子句进行for循环任务调度的管理" class="headerlink" title="用schedule子句进行for循环任务调度的管理"></a>用schedule子句进行for循环任务调度的管理</h2><p>schedule子句形式</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">schedule(type, size)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>type参数有四种：1.static, 2.dynamic, 3.guided, 4.runtime</p><p>size参数是整形数据：表示循环迭代次数划分的单位。</p><ul><li><p><strong>static参数</strong></p><p>静态调度，不用size参数时分配给每个程序的都是n&#x2F;t次连续迭代，n为迭代次数，t为并行的线程数目。</p></li><li><p><strong>dynamic参数</strong></p><p>动态调度模式是先到先得的方式进行任务分配，不用size参数的时候，先把任务干完的线程先取下一个任务，以此类推，而不是一开始就分配固定的任务数。使用size参数的时候，分配的任务以size为单位，一次性分配size个。虽然很智能，在任务难度不均衡的时候适合用dynamic，否则会引起过多的任务动态申请的开销。</p></li><li><p><strong>guided参数</strong></p><p>刚开始每个线程会分配到比较大的迭代块，后来分配到的迭代块逐渐递减，没有指定size就会降到1，否则降到size。</p></li><li><p><strong>runtime</strong></p><p>基本不会用到，需要了解的可以自行了解。</p></li></ul><h2 id="sections制导指令"><a href="#sections制导指令" class="headerlink" title="sections制导指令"></a>sections制导指令</h2><p>用sections把不同的区域交给不同的线程去执行</p><p>用法：</p><pre class="line-numbers language-none"><code class="language-none">#include&lt;omp.h&gt;#include&lt;iostream&gt;using namespace std;int main()&#123;omp_set_num_threads(3);#pragma omp parallel sections&#123;#pragma omp section&#123;cout &lt;&lt;omp_get_thread_num();&#125;#pragma omp section&#123;cout &lt;&lt; omp_get_thread_num();&#125;#pragma omp section&#123;cout &lt;&lt; omp_get_thread_num();&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="single制导指令"><a href="#single制导指令" class="headerlink" title="single制导指令"></a>single制导指令</h2><p>single制导指令所包含的代码段只有一个线程执行，别的线程跳过该代码，如果没有nowait子句，那么其他线程将会在single制导指令结束的隐式同步点等待。有nowait子句其他线程将跳过等待往下执行。</p><pre class="line-numbers language-none"><code class="language-none">int main()&#123;omp_set_num_threads(4);#pragma omp parallel&#123;#pragma omp single&#123;cout &lt;&lt; &quot;single thread&#x3D;&quot; &lt;&lt; omp_get_thread_num()&lt;&lt;endl;&#125;cout &lt;&lt; omp_get_thread_num() &lt;&lt; endl;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并行编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hellohexo</title>
      <link href="/2023/08/25/hellohexo/"/>
      <url>/2023/08/25/hellohexo/</url>
      
        <content type="html"><![CDATA[<p>Hello Hexo！</p>]]></content>
      
      
      <categories>
          
          <category> webpage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
